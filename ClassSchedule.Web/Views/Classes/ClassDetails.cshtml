@using CTCClassSchedule;
@using CTCClassSchedule.Common;
@using MvcMiniProfiler;
@using Ctc.Ods.Types;
@using CTCClassSchedule.Models
@model ClassDetailsModel

@{
    MiniProfiler _profiler = MiniProfiler.Current;
    Course course = Model.Courses.Count > 0 ? Model.Courses[0] : null;

    string courseId = String.Concat(ViewContext.RouteData.Values["Prefix"].ToString(), " ", ViewContext.RouteData.Values["ClassNum"].ToString());
    ViewBag.PageTitle = String.Concat(courseId, " at Bellevue College");
}

<!--<script type="text/javascript" src="@Url.Content("~/Scripts/CtcClassSchedule.js")"></script>-->

<!--<div title="Edit Section" id="edit-section"></div>-->

@Html.Partial("breadcrumbNavigation")

@Html.Partial("quarterNavigation", new QuarterNavigationModel { CurrentQuarter = Model.CurrentQuarter, NavigationQuarters = Model.NavigationQuarters })

<div class="row row-padding">
    <div class="col-md-8">
        <div id="content" class="content-padding buffer-top buffer-bottom">
            @if (course != null)
            {
				<h1>
					@(string.Format("{0} {1}", Helpers.SubjectWithCommonCourseFlag(course), course.Number))
					@course.Title @ViewHelpers.DisplayCredits(course)
				</h1>
                    
                @* Display any upcoming course title change, if detected *@
                if (Model.Courses.Count > 1)
                {
                    Course newCourse = Model.Courses[1];
                    if (newCourse.IsVariableCredits != course.IsVariableCredits || newCourse.Credits != course.Credits || newCourse.Title.Trim() != course.Title.Trim())
                    {
					    <div class="alert alert-info">
							<h4>Class title change starting @newCourse.YearQuarterBegin.FriendlyName</h4>
							<p>@newCourse.Title
							&#8226;
							@if (newCourse.IsVariableCredits)
                            {
									@:V1-@Html.CreditsValue(newCourse.Credits)
									<abbr title=" variable credit(s) ">Cr.</abbr>
                            }
                            else
                            {
									@Html.CreditsValue(newCourse.Credits)
									<abbr title=" credit(s) ">Cr.</abbr>
                            }
							</p>
					    </div>
                    }
                }
                    
                <h2>Description</h2>
				@Html.Partial("CourseDescriptions", course.Descriptions, new ViewDataDictionary { new KeyValuePair<string, object>("CurrentQuarter", Model.CurrentQuarter) })

                @* ***************************************************************************************************
						Temporarily removed in order to meet initial public launch. We may want to re-enable this block

							- 4/05/2012, shawn.south@bellevuecollege.edu
						***************************************************************************************************
				@if (course.Footnotes.Count > 0)
				{
					<div id="courseFootnotes">
						<h2>Details:</h2>
						<p>
							<span id="odsCourseFootnotes">
								@foreach (string footnote in course.Footnotes.Where(f => !String.IsNullOrWhiteSpace(f)))
								{
									@footnote;
								}
							</span>
							@if (course.Footnotes.Any(f => f.IndexOf("prerequisite", StringComparison.OrdinalIgnoreCase) >= 0))
							{
								<a class="footnote-prereq" href="http://bellevuecollege.edu/enrollment/transfer/prerequisites/entrycode/">How to clear prerequisites?</a>
							}
						</p>
					</div>
				}

				@* Show footnotes, and upcoming changes to footnotes. Save this for a future release
				@if (!string.IsNullOrWhiteSpace(ViewBag.CMSFootnote) || _courses[0].Footnotes.Count > 0)
				{
					<div id="courseFootnotes">
						<h2>Details:</h2>
						<p>
							@ViewHelpers.DisplayFootnotes(course.Footnotes, ViewBag.CMSFootnote)
						</p>
					</div>
				}

				@if (_courses.Count > 1)
				{
					if (_courses[1].Footnotes.Count > 0 && !_courses[0].Footnotes.SequenceEqual(_courses[1].Footnotes))
					{
						<div class="upcomingChange">
							<h3>New details starting @_courses[1].YearQuarterBegin.FriendlyName</h3>
							<p>
								@ViewHelpers.DisplayFootnotes(_courses[1].Footnotes, ViewBag.CMSFootnote)
							</p>
						</div>
					}
				}
				*@
                if (!string.IsNullOrWhiteSpace(Model.CMSFootnote))
                {
					<h2>Details</h2>
					<p>@Html.Raw(Model.CMSFootnote)</p>
                }

				if (!string.IsNullOrWhiteSpace(Model.LearningOutcomes) && !Model.LearningOutcomes.StartsWith("Error:"))
                {
					<h2>Outcomes</h2>
					<p>After completing this class, students should be able to:</p>
					@Html.Raw(Model.LearningOutcomes)
                }
                    
                if (Model.QuartersOffered != null && Model.QuartersOffered.Count > 0)
                {
                    <h2>Offered</h2>
		            <ul>
		                @foreach (YearQuarter q in Model.QuartersOffered)
                        {
                            int relativeOffset = Model.CurrentQuarter.FriendlyName.CompareTo(q.FriendlyName);
				            <li class="@(relativeOffset < 0 ? "offeredPastQuarter" : "offeredFutureOrPresentQuarter")">
				                @Html.ActionLink(q.FriendlyName, "YearQuarterSubject", new { YearQuarter = q.FriendlyName.Replace(" ", string.Empty), Subject = Model.Slug })

					            @if (relativeOffset == 0) { <span>(current quarter)</span> }
				            </li>
                        }
	                </ul>
                }
            }
        </div>
    </div>
    <div class="col-md-4">
        <div class="content-padding buffer-top buffer-bottom">
            @if (course != null)
            {
                <div class="well">
                    <h4>Department</h4>
                    <ul class="list-unstyled">
                        <li>
                        @if (!string.IsNullOrWhiteSpace(Model.SubjectTitle))
                        {
                            if (!string.IsNullOrWhiteSpace(Model.DepartmentURL))
                            {
							    <a href="@Model.DepartmentURL">
							    @if (!string.IsNullOrWhiteSpace(Model.DepartmentTitle))
                                {
		                            @Model.DepartmentTitle
                                }
                                else
                                {
		                            @Model.SubjectTitle
                                }
							    </a>
                            }
                            else
                            {
                                if (!string.IsNullOrWhiteSpace(Model.DepartmentTitle))
                                {
								    @Model.DepartmentTitle
                                }
                                else
                                {
								    @Model.SubjectTitle
                                }
                            }
                        }
                        </li>
                    </ul>

                    @if (!string.IsNullOrWhiteSpace(Model.DivisionTitle))
                    {
                        <h4>Division</h4>
                        <ul class="list-unstyled">
                            <li>
                            @if (!string.IsNullOrWhiteSpace(Model.DivisionURL))
                            {
							    <a href="@Model.DivisionURL">@Model.DivisionTitle</a>
                            }
                            else
                            {
							    @Model.DivisionTitle
                            }
                            </li>
                        </ul>
                    }
                </div>
                <!-- </div> -->
            }
        </div>
    </div>
</div> <!-- row -->