@using CTCClassSchedule
@using Ctc.Ods.Types
@model IList<YearQuarter>
@{
	YearQuarter quarterViewing = ViewBag.YearQuarter;
	string subject = string.Empty;

	//ICollection<string> foo = ViewData.Keys;
	//RouteValueDictionary bar = ViewContext.RouteData.DataTokens;
	if (ViewContext.RouteData.Values.ContainsKey("Subject"))
	{
		subject = ViewContext.RouteData.Values["Subject"].ToString();
	}
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Browse for Classes</h3>
    </div>
    
    <div class="buffer-padding">
        <h4>Subject</h4>

        <ul class="subject-sidenav buffer-bottom list-unstyled">
		    @if (!string.IsNullOrWhiteSpace(subject))
		    {
			    <li class="active">
				    <span class="notlink">@subject</span>
			    </li>
		    }

		    <li>
			    @Html.Partial("subjectNavigation", quarterViewing, new ViewDataDictionary())
		    </li>
	    </ul>

	    <h4>Classes offered</h4>
	    <ul>
		    <li @if (quarterViewing == null) { <text> class="active" </text> }>
			    <a href="@Url.Action("AllClasses", "Classes")">All credit classes</a>
		    </li>

		    @foreach (YearQuarter yrq in Model)
		    {
			    <li @if (quarterViewing != null && quarterViewing == yrq) { <text> class="active" </text> }>
			    @if (String.IsNullOrEmpty(subject))
			    {
				    <a href="@Url.Action("YearQuarter", "Classes", new {YearQuarter = yrq.FriendlyName.Replace(" ", string.Empty)})">@yrq.FriendlyName</a>
			    }
			    else
			    {
				    <a href="@Url.Action("YearQuarterSubject", "Classes", new {YearQuarter = yrq.FriendlyName.Replace(" ", string.Empty), Subject = subject})">@yrq.FriendlyName</a>
			    }
			    </li>
		    }
        </ul>
    </div>
</div>